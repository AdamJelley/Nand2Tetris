// Bootstrap code
@256
D=A
@SP
M=D
//call Sys.init 0
// push
@Sys.init$ret.0
D=A
@SP
A=M
M=D
@SP
M=M+1
// push
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
// push
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
// push
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
// push
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Sys.init$ret.0)
//function Class1.set 0
(Class1.set)
// push
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop
@SP
AM=M-1
D=M
@Class1.0
M=D
// push
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop
@SP
AM=M-1
D=M
@Class1.1
M=D
// push
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A+1
@SP
M=D
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Class1.get 0
(Class1.get)
// push
@Class1.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// push
@Class1.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
//return
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A+1
@SP
M=D
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Sys.init 0
(Sys.init)
// push
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// push
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Class1.set 2
// push
@Class1.set$ret.0
D=A
@SP
A=M
M=D
@SP
M=M+1
// push
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
// push
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
// push
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
// push
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.set
0;JMP
(Class1.set$ret.0)
// pop
@SP
AM=M-1
D=M
@R5
M=D
// push
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
// push
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Class2.set 2
// push
@Class2.set$ret.0
D=A
@SP
A=M
M=D
@SP
M=M+1
// push
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
// push
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
// push
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
// push
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.set
0;JMP
(Class2.set$ret.0)
// pop
@SP
AM=M-1
D=M
@R5
M=D
//call Class1.get 0
// push
@Class1.get$ret.0
D=A
@SP
A=M
M=D
@SP
M=M+1
// push
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
// push
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
// push
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
// push
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.get
0;JMP
(Class1.get$ret.0)
//call Class2.get 0
// push
@Class2.get$ret.0
D=A
@SP
A=M
M=D
@SP
M=M+1
// push
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
// push
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
// push
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
// push
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.get
0;JMP
(Class2.get$ret.0)
(END)
@END
0;JMP
//function Class2.set 0
(Class2.set)
// push
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop
@SP
AM=M-1
D=M
@Class2.0
M=D
// push
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop
@SP
AM=M-1
D=M
@Class2.1
M=D
// push
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A+1
@SP
M=D
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Class2.get 0
(Class2.get)
// push
@Class2.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// push
@Class2.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
//return
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A+1
@SP
M=D
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
