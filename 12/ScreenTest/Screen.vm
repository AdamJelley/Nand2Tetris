function Screen.init 2
push constant 16384
pop static 0
push constant 8192
pop static 2
push constant 1
neg
pop static 3
push constant 16
pop local 1
push constant 1
pop local 0
push local 1
call Array.new 1
pop static 1
push static 1
push constant 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
label WHILE_EXP0
push local 0
push local 1
lt
not
if-goto WHILE_END0
push static 1
push local 0
add
push static 1
push local 0
push constant 1
sub
add
pop pointer 1
push that 0
push static 1
push local 0
push constant 1
sub
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.clearScreen 1
push constant 0
pop local 0
label WHILE_EXP1
push local 0
push static 2
lt
not
if-goto WHILE_END1
push static 0
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 3
push constant 0
return
function Screen.drawPixel 3
push argument 0
push constant 0
lt
push argument 0
push constant 511
gt
or
push argument 1
push constant 0
lt
or
push argument 1
push constant 255
gt
or
not
if-goto IF_FALSE0
push constant 7
call Sys.error 1
pop temp 0
goto IF_TRUE0
label IF_FALSE0
label IF_TRUE0
push constant 32
push argument 1
call Math.multiply 2
push argument 0
push constant 16
call Math.divide 2
add
pop local 0
push argument 0
push argument 0
push constant 16
call Math.divide 2
push constant 16
call Math.multiply 2
sub
pop local 1
push static 1
push local 1
add
pop pointer 1
push that 0
pop local 2
push static 3
not
if-goto IF_FALSE1
push static 0
push local 0
add
push static 0
push local 0
add
pop pointer 1
push that 0
push local 2
or
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_TRUE1
label IF_FALSE1
push static 0
push local 0
add
push static 0
push local 0
add
pop pointer 1
push that 0
push local 2
not
and
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_TRUE1
push constant 0
return
function Screen.drawLine 8
push argument 0
push constant 0
lt
push argument 0
push constant 511
gt
or
push argument 1
push constant 0
lt
or
push argument 1
push constant 255
gt
or
push argument 2
push constant 0
lt
or
push argument 2
push constant 511
gt
or
push argument 3
push constant 0
lt
or
push argument 3
push constant 255
gt
or
not
if-goto IF_FALSE2
push constant 8
call Sys.error 1
pop temp 0
goto IF_TRUE2
label IF_FALSE2
label IF_TRUE2
push argument 2
push argument 0
gt
not
if-goto IF_FALSE3
push argument 2
push argument 0
sub
pop local 0
push argument 0
pop local 2
push argument 3
push argument 1
gt
not
if-goto IF_FALSE4
push argument 3
push argument 1
sub
pop local 1
push argument 1
pop local 3
push constant 1
neg
pop local 7
goto IF_TRUE4
label IF_FALSE4
push argument 3
push argument 1
lt
not
if-goto IF_FALSE5
push argument 1
push argument 3
sub
pop local 1
push argument 1
pop local 3
push constant 0
pop local 7
goto IF_TRUE5
label IF_FALSE5
push argument 1
push argument 0
push argument 2
call Screen.drawHorLine 3
pop temp 0
label IF_TRUE5
label IF_TRUE4
goto IF_TRUE3
label IF_FALSE3
push argument 0
push argument 2
gt
not
if-goto IF_FALSE6
push argument 0
push argument 2
sub
pop local 0
push argument 2
pop local 2
push argument 1
push argument 3
gt
not
if-goto IF_FALSE7
push argument 1
push argument 3
sub
pop local 1
push argument 3
pop local 3
push constant 1
neg
pop local 7
goto IF_TRUE7
label IF_FALSE7
push argument 1
push argument 3
lt
not
if-goto IF_FALSE8
push argument 3
push argument 1
sub
pop local 1
push argument 3
pop local 3
push constant 0
pop local 7
goto IF_TRUE8
label IF_FALSE8
push argument 1
push argument 0
push argument 2
call Screen.drawHorLine 3
pop temp 0
label IF_TRUE8
label IF_TRUE7
goto IF_TRUE6
label IF_FALSE6
push argument 0
push argument 1
push argument 3
call Screen.drawVertLine 3
pop temp 0
label IF_TRUE6
label IF_TRUE3
push constant 0
pop local 4
push constant 0
pop local 5
push constant 0
pop local 6
label WHILE_EXP2
push local 4
push local 0
gt
not
push local 5
call Math.abs 1
push local 1
gt
not
and
not
if-goto WHILE_END2
push local 2
push local 4
add
push local 3
push local 5
add
call Screen.drawPixel 2
pop temp 0
push local 6
push constant 0
lt
not
if-goto IF_FALSE9
push local 4
push constant 1
add
pop local 4
push local 6
push local 1
add
pop local 6
goto IF_TRUE9
label IF_FALSE9
push local 7
not
if-goto IF_FALSE10
push local 5
push constant 1
add
pop local 5
goto IF_TRUE10
label IF_FALSE10
push local 5
push constant 1
sub
pop local 5
label IF_TRUE10
push local 6
push local 0
sub
pop local 6
label IF_TRUE9
goto WHILE_EXP2
label WHILE_END2
push constant 0
return
function Screen.drawVertLine 3
push argument 2
push argument 1
gt
not
if-goto IF_FALSE11
push argument 2
push argument 1
sub
pop local 0
push argument 1
pop local 1
goto IF_TRUE11
label IF_FALSE11
push argument 1
push argument 2
sub
pop local 0
push argument 2
pop local 1
label IF_TRUE11
push constant 0
pop local 2
label WHILE_EXP3
push local 2
push local 0
gt
not
not
if-goto WHILE_END3
push argument 0
push local 1
push local 2
add
call Screen.drawPixel 2
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP3
label WHILE_END3
push constant 0
return
function Screen.drawHorLine 3
push argument 2
push argument 1
gt
not
if-goto IF_FALSE12
push argument 2
push argument 1
sub
pop local 0
push argument 1
pop local 1
goto IF_TRUE12
label IF_FALSE12
push argument 1
push argument 2
sub
pop local 0
push argument 2
pop local 1
label IF_TRUE12
push constant 0
pop local 2
label WHILE_EXP4
push local 2
push local 0
gt
not
not
if-goto WHILE_END4
push local 1
push local 2
add
push argument 0
call Screen.drawPixel 2
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP4
label WHILE_END4
push constant 0
return
function Screen.drawRectangle 5
push argument 0
push constant 0
lt
push argument 0
push constant 511
gt
or
push argument 1
push constant 0
lt
or
push argument 1
push constant 255
gt
or
push argument 2
push constant 0
lt
or
push argument 2
push constant 511
gt
or
push argument 3
push constant 0
lt
or
push argument 3
push constant 255
gt
or
not
if-goto IF_FALSE13
push constant 9
call Sys.error 1
pop temp 0
goto IF_TRUE13
label IF_FALSE13
label IF_TRUE13
push argument 0
push argument 2
lt
not
if-goto IF_FALSE14
push argument 2
push argument 0
sub
pop local 0
push argument 0
pop local 2
goto IF_TRUE14
label IF_FALSE14
push argument 0
push argument 2
sub
pop local 0
push argument 2
pop local 2
label IF_TRUE14
push argument 1
push argument 3
lt
not
if-goto IF_FALSE15
push argument 3
push argument 1
sub
pop local 1
push argument 1
pop local 3
goto IF_TRUE15
label IF_FALSE15
push argument 1
push argument 3
sub
pop local 1
push argument 3
pop local 3
label IF_TRUE15
push constant 0
pop local 4
push local 1
push local 0
lt
not
if-goto IF_FALSE16
label WHILE_EXP5
push local 4
push local 1
lt
not
if-goto WHILE_END5
push local 3
push local 4
add
push argument 0
push argument 2
call Screen.drawHorLine 3
pop temp 0
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP5
label WHILE_END5
goto IF_TRUE16
label IF_FALSE16
label WHILE_EXP6
push local 4
push local 0
lt
not
if-goto WHILE_END6
push local 2
push local 4
add
push argument 1
push argument 3
call Screen.drawVertLine 3
pop temp 0
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP6
label WHILE_END6
label IF_TRUE16
push constant 0
return
function Screen.drawCircle 2
push argument 0
push constant 0
lt
push argument 0
push constant 511
gt
or
push argument 1
push constant 0
lt
or
push argument 1
push constant 255
gt
or
not
if-goto IF_FALSE17
push constant 12
call Sys.error 1
pop temp 0
goto IF_TRUE17
label IF_FALSE17
label IF_TRUE17
push argument 2
push constant 181
gt
not
if-goto IF_FALSE18
push constant 13
call Sys.error 1
pop temp 0
goto IF_TRUE18
label IF_FALSE18
label IF_TRUE18
push argument 1
push argument 2
sub
pop local 0
label WHILE_EXP7
push local 0
push argument 1
push argument 2
add
push constant 1
add
lt
not
if-goto WHILE_END7
push argument 2
push argument 2
call Math.multiply 2
push argument 1
push local 0
sub
push argument 1
push local 0
sub
call Math.multiply 2
sub
call Math.sqrt 1
pop local 1
push local 0
push argument 0
push local 1
sub
push argument 0
push local 1
add
call Screen.drawHorLine 3
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP7
label WHILE_END7
push constant 0
return
