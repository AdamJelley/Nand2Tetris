function Ball.new 0
push constant 11
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push constant 6
pop this 2
push constant 3
pop this 3
push argument 0
pop this 7
push argument 1
pop this 8
push constant 0
pop this 4
push pointer 0
call Ball.show 1
pop temp 0
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.show 0
push argument 0
pop pointer 0
push constant 1
neg
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Ball.setDestination 0
push argument 0
pop pointer 0
push argument 1
pop this 5
push argument 2
pop this 6
push this 5
push this 0
sub
pop this 9
push this 6
push this 1
sub
pop this 10
push constant 0
return
function Ball.getLeft 0
push argument 0
pop pointer 0
push this 0
return
function Ball.getRight 0
push argument 0
pop pointer 0
push this 0
push this 2
add
return
function Ball.getTop 0
push argument 0
pop pointer 0
push this 1
return
function Ball.getBottom 0
push argument 0
pop pointer 0
push this 1
push this 2
add
return
function Ball.getSize 0
push argument 0
pop pointer 0
push this 2
return
function Ball.setX 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push constant 0
return
function Ball.setY 0
push argument 0
pop pointer 0
push argument 1
pop this 1
push constant 0
return
function Ball.increaseSpeed 0
push argument 0
pop pointer 0
push this 3
push argument 1
add
pop this 3
push constant 0
return
function Ball.move 3
push argument 0
pop pointer 0
push constant 2
call Array.new 1
pop local 2
push this 9
call Math.abs 1
pop local 0
push this 10
call Math.abs 1
pop local 1
push this 9
push constant 0
gt
push this 10
push constant 0
gt
and
not
if-goto IF_FALSE0
push local 0
push local 1
gt
not
if-goto IF_FALSE1
push this 1
push this 3
add
pop this 1
push this 0
push local 0
push this 3
call Math.multiply 2
push local 1
call Math.divide 2
add
pop this 0
goto IF_TRUE1
label IF_FALSE1
push this 0
push this 3
add
pop this 0
push this 1
push local 1
push this 3
call Math.multiply 2
push local 0
call Math.divide 2
add
pop this 1
label IF_TRUE1
goto IF_TRUE0
label IF_FALSE0
label IF_TRUE0
push this 9
push constant 0
gt
push this 10
push constant 0
lt
and
not
if-goto IF_FALSE2
push local 0
push local 1
gt
not
if-goto IF_FALSE3
push this 1
push this 3
sub
pop this 1
push this 0
push local 0
push this 3
call Math.multiply 2
push local 1
call Math.divide 2
add
pop this 0
goto IF_TRUE3
label IF_FALSE3
push this 0
push this 3
add
pop this 0
push this 1
push local 1
push this 3
call Math.multiply 2
push local 0
call Math.divide 2
sub
pop this 1
label IF_TRUE3
goto IF_TRUE2
label IF_FALSE2
label IF_TRUE2
push this 9
push constant 0
lt
push this 10
push constant 0
gt
and
not
if-goto IF_FALSE4
push local 0
push local 1
gt
not
if-goto IF_FALSE5
push this 1
push this 3
add
pop this 1
push this 0
push local 0
push this 3
call Math.multiply 2
push local 1
call Math.divide 2
sub
pop this 0
goto IF_TRUE5
label IF_FALSE5
push this 0
push this 3
sub
pop this 0
push this 1
push local 1
push this 3
call Math.multiply 2
push local 0
call Math.divide 2
add
pop this 1
label IF_TRUE5
goto IF_TRUE4
label IF_FALSE4
label IF_TRUE4
push this 9
push constant 0
lt
push this 10
push constant 0
lt
and
not
if-goto IF_FALSE6
push local 0
push local 1
gt
not
if-goto IF_FALSE7
push this 1
push this 3
sub
pop this 1
push this 0
push local 0
push this 3
call Math.multiply 2
push local 1
call Math.divide 2
sub
pop this 0
goto IF_TRUE7
label IF_FALSE7
push this 0
push this 3
sub
pop this 0
push this 1
push local 1
push this 3
call Math.multiply 2
push local 0
call Math.divide 2
sub
pop this 1
label IF_TRUE7
goto IF_TRUE6
label IF_FALSE6
label IF_TRUE6
push local 2
push constant 0
add
push this 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 1
add
push this 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
return
function Ball.bounce 0
push argument 0
pop pointer 0
push argument 1
push constant 1
eq
push argument 1
push constant 2
eq
or
not
if-goto IF_FALSE8
push constant 2
push this 1
call Math.multiply 2
push this 8
sub
pop this 6
push this 1
pop this 8
push this 7
pop this 5
push this 0
pop this 7
goto IF_TRUE8
label IF_FALSE8
label IF_TRUE8
push argument 1
push constant 3
eq
push argument 1
push constant 4
eq
or
not
if-goto IF_FALSE9
push constant 2
push this 0
call Math.multiply 2
push this 7
sub
pop this 5
push this 0
pop this 7
push this 8
pop this 6
push this 1
pop this 8
goto IF_TRUE9
label IF_FALSE9
label IF_TRUE9
push argument 1
push constant 5
eq
not
if-goto IF_FALSE10
push constant 2
push this 0
call Math.multiply 2
push this 7
sub
pop this 5
push this 0
pop this 7
push this 8
pop this 6
push this 1
pop this 8
goto IF_TRUE10
label IF_FALSE10
label IF_TRUE10
push this 5
push this 0
sub
pop this 9
push this 6
push this 1
sub
pop this 10
push this 10
push constant 0
eq
not
if-goto IF_FALSE11
push constant 5
neg
pop this 9
push constant 10
pop this 10
goto IF_TRUE11
label IF_FALSE11
label IF_TRUE11
push constant 0
return
